{"version":3,"sources":["webpack:///./src/pages/neemcontactop.js"],"names":["ContactUSPage","location","useEffect","pathname","document","getElementsByTagName","classList","remove","useForm","register","handleSubmit","reset","errors","getValues","isSubmitting","formState","useState","isSubmited","setIsSubmited","hasError","field","undefined","getError","message","onSubmit","data","a","to","from","email","subject","fetch","method","mode","cache","body","JSON","stringify","headers","className","src","alt","type","name","disabled","id","ref","required","error","toString","validate","_","values","nest","test","toLowerCase","contactNumber","rows","role"],"mappings":"4UAkJeA,UA9IO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAErBC,qBAAU,WACmB,kBAArBD,EAASE,UACTC,SAASC,qBAAqB,QAAQ,GAAGC,UAAUC,OAAO,kBAE/D,IANiC,MAU9BC,cAFEC,EAR4B,EAQ5BA,SAAUC,EARkB,EAQlBA,aAAcC,EARI,EAQJA,MAAOC,EARH,EAQGA,OAAQC,EARX,EAQWA,UAC3CC,EATgC,EAQsBC,UACtDD,aATgC,EAYAE,oBAAS,GAAtCC,EAZ6B,KAYjBC,EAZiB,KAc9BC,EAAW,SAAAC,GAAK,YAAsBC,IAAlBT,EAAOQ,IAC3BE,EAAW,SAAAF,GAAK,OAAID,EAASC,IAAUR,EAAOQ,GAAOG,SAErDC,EAAQ,e,EAAA,G,EAAA,UAAG,WAAMC,GAAN,SAAAC,EAAA,sEAETR,GAAc,GACdP,IACAc,EAAKE,GAAK,CAAC,yBACXF,EAAKG,KAAOH,EAAKI,MACjBJ,EAAKK,QAAU,yBANN,SAOHC,MARE,6DAQa,CACjBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,KAAMC,KAAKC,UAAUZ,GACrBa,QAAS,CACL,eAAgB,qCAbf,OAgBTpB,GAAc,GAhBL,kDAkBTA,GAAc,GAlBL,yD,+KAAH,sDA0Cd,OACI,6BAASqB,UAAU,cACf,yBAAKA,UAAU,aACX,kBAAC,OAAD,CAAMA,UAAU,OAAOZ,GAAG,KACtB,yBAAKa,IAAI,qBAAqBC,IAAI,MAEtC,wDACA,yBAAKF,UAAU,OACX,yBAAKA,UAAU,sBACX,0BAAMP,OAAO,OAAOR,SAAUd,EAAac,IACvC,yBAAKe,UAAU,cACX,uCAAY,oCACZ,2BAAOG,KAAK,OACRH,UAAU,eACVI,KAAK,OACLC,SAAU9B,EACV+B,GAAG,OACHC,IAAKrC,EAAS,CACVsC,SAAU,8BAGjB5B,EAAS,SACN,0BAAMoB,UAAU,aAAaS,MAAOC,SAAS9B,EAAS,UAAtD,IAAkEG,EAAS,UAInF,yBAAKiB,UAAU,cACX,wCAAa,oCACb,2BAAOG,KAAK,OACRH,UAAU,eACVK,SAAU9B,EACV6B,KAAK,QACLE,GAAG,QACHC,IAAKrC,EAAS,CAAEyC,SA7C1B,SAAAC,GAClB,IAAMC,EAASvC,EAAU,CAAEwC,MAAM,IAEjC,MADW,0JACAC,KAAKF,EAAOvB,MAAM0B,gBAAkB,4BA0CsBR,SAAU,yBAEtD5B,EAAS,UACN,0BAAMoB,UAAU,aAAaS,MAAOC,SAAS9B,EAAS,WAAtD,IAAmEG,EAAS,WAGpF,yBAAKiB,UAAU,cACX,iDAAsB,oCACtB,2BAAOG,KAAK,OACRH,UAAU,eACVI,KAAK,gBACLC,SAAU9B,EACV+B,GAAG,gBACHC,IAAKrC,EAAS,CACVyC,SArDd,SAAAC,GAClB,IAAMC,EAASvC,EAAU,CAAEwC,MAAM,IAEjC,MADW,+CACAC,KAAKF,EAAOI,cAAcD,gBAAkB,mCAmDvBR,SAAU,kCAGjB5B,EAAS,kBACN,0BAAMoB,UAAU,aAAaS,MAAOC,SAAS9B,EAAS,mBAAtD,IAA2EG,EAAS,mBAG5F,yBAAKiB,UAAU,cACX,0CACA,8BAAUA,UAAU,eAChBkB,KAAK,IACLd,KAAK,cACLC,SAAU9B,EACV+B,GAAG,cACHC,IAAKrC,KAGb,4BACI8B,UAAU,iCACVK,SAAU9B,EACV4B,KAAK,UACHzB,EAAqC,GAAxB,0CACdA,EAAa,yBACVsB,UAAU,4BACVmB,KAAK,UACL,0BAAMnB,UAAU,WAAhB,eACK","file":"component---src-pages-neemcontactop-js-ee0f4eb437b4b5415bb9.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link } from 'gatsby'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Metatags from \"../components/Metatags\";\r\nconst ContactUSPage = ({ location }) => {\r\n\r\n    useEffect(() => {\r\n        if (location.pathname == '/neemcontactop') {\r\n            document.getElementsByTagName('body')[0].classList.remove('menu-overlay');\r\n        }\r\n    }, []);\r\n\r\n    const { register, handleSubmit, reset, errors, getValues, formState: {\r\n        isSubmitting\r\n    } } = useForm();\r\n\r\n    const [isSubmited, setIsSubmited] = useState(false);\r\n\r\n    const hasError = field => errors[field] !== undefined;\r\n    const getError = field => hasError(field) && errors[field].message;\r\n    const API_URL = 'https://5q0p1oxzc4.execute-api.us-east-1.amazonaws.com/dev';\r\n    const onSubmit = async data => {\r\n        try {\r\n            setIsSubmited(true)\r\n            reset();\r\n            data.to = [\"nicky@molenkoning.com\"];\r\n            data.from = data.email;\r\n            data.subject = \"Reactie van de website\";\r\n            await fetch(API_URL, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            });\r\n            setIsSubmited(false)\r\n        } catch (error) {\r\n            setIsSubmited(false)\r\n            // handle server errors\r\n        }\r\n    };\r\n\r\n    const validateService = _ => {\r\n        const values = getValues({ nest: true });\r\n        return (\r\n            values.serviceDetail.filter(v => Boolean(v)).length >= 1 || 'Please select at least one Service'\r\n        );\r\n    };\r\n\r\n    const validateEmail = _ => {\r\n        const values = getValues({ nest: true });\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return (re.test(values.email.toLowerCase()) || 'Please enter valid email');\r\n    }\r\n\r\n    const validatePhone = _ => {\r\n        const values = getValues({ nest: true });\r\n        const re = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/;\r\n        return (re.test(values.contactNumber.toLowerCase()) || 'Please enter valid Phone number');\r\n    }\r\n\r\n    return (\r\n        <section className=\"contact-us\">\r\n            <div className=\"container\">\r\n                <Link className=\"logo\" to=\"/\">\r\n                    <img src=\"../images/logo.png\" alt=\"\" />\r\n                </Link>\r\n                <h1>Neem contact met ons op:</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-lg-4\">\r\n                        <form method=\"post\" onSubmit={handleSubmit(onSubmit)} >\r\n                            <div className=\"form-group\">\r\n                                <label>Naam <span>*</span></label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    disabled={isSubmitting}\r\n                                    id=\"name\"\r\n                                    ref={register({\r\n                                        required: 'Please enter first name',\r\n                                    })}\r\n                                />\r\n                                {hasError(\"name\") && (\r\n                                    <span className=\"form-error\" error={toString(hasError(\"name\"))}> {getError(\"name\")}</span>\r\n                                )}\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Email <span>*</span></label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    disabled={isSubmitting}\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    ref={register({ validate: validateEmail, required: \"Please enter email\" })}\r\n                                />\r\n                                {hasError(\"email\") && (\r\n                                    <span className=\"form-error\" error={toString(hasError(\"email\"))}> {getError(\"email\")}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Telefoonnumber <span>*</span></label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"contactNumber\"\r\n                                    disabled={isSubmitting}\r\n                                    id=\"contactNumber\"\r\n                                    ref={register({\r\n                                        validate: validatePhone,\r\n                                        required: 'Please enter contact number',\r\n                                    })}\r\n                                />\r\n                                {hasError(\"contactNumber\") && (\r\n                                    <span className=\"form-error\" error={toString(hasError(\"contactNumber\"))}> {getError(\"contactNumber\")}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Beritch</label>\r\n                                <textarea className=\"form-control\"\r\n                                    rows=\"3\"\r\n                                    name=\"description\"\r\n                                    disabled={isSubmitting}\r\n                                    id=\"description\"\r\n                                    ref={register}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                className=\"btn btn-trt-primary w-100 mt-4\"\r\n                                disabled={isSubmitting}\r\n                                type=\"submit\">\r\n                                {!isSubmited ? <span>Verstuur</span> : ''}\r\n                                {isSubmited ? <div\r\n                                    className=\"spinner-border text-light\"\r\n                                    role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div> : ''}\r\n                            </button>\r\n                        </form >\r\n                    </div >\r\n                </div >\r\n            </div >\r\n        </section >\r\n    )\r\n}\r\nexport default ContactUSPage;"],"sourceRoot":""}